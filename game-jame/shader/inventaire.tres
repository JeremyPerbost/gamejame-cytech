[gd_resource type="VisualShader" load_steps=15 format=3 uid="uid://di5vwqfv0c5qj"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_4enpw"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_i7po5"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_hj3hs"]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_4f3ld"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_3ym76"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_17k0v"]
expanded_output_ports = [0]
constant = Color(0.862496, 0.441935, 0.105241, 1)

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_inlut"]
default_input_values = [0, 0.0, 1, 0.03]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_ojflt"]
parameter_name = "Noise"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_13ox8"]
source = 5

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_31rq0"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_vrh42"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_k0t6s"]
constant = 1.0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_vj3ax"]
parameter_name = "Dissolvevalue"
hint = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_k8gfl"]
input_name = "texture"

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D Noise;
uniform float Dissolvevalue : hint_range(0, 1);



void fragment() {
// ColorConstant:15
	vec4 n_out15p0 = vec4(0.862496, 0.441935, 0.105241, 1.000000);


	vec4 n_out11p0;
// Texture2D:11
	n_out11p0 = texture(TEXTURE, UV);
	float n_out11p4 = n_out11p0.a;


// Input:12
	vec2 n_out12p0 = SCREEN_UV;


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(Noise, n_out12p0);


// FloatParameter:7
	float n_out7p0 = Dissolvevalue;


// FloatConstant:5
	float n_out5p0 = 0.000000;


// FloatConstant:6
	float n_out6p0 = 1.000000;


	vec3 n_out13p0;
// If:13
	float n_in13p2 = 0.00001;
	vec3 n_in13p3 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out3p0.x - n_out7p0) < n_in13p2)
	{
		n_out13p0 = n_in13p3;
	}
	else if(n_out3p0.x < n_out7p0)
	{
		n_out13p0 = vec3(n_out6p0);
	}
	else
	{
		n_out13p0 = vec3(n_out5p0);
	}


// Mix:14
	vec3 n_out14p0 = mix(vec3(n_out15p0.xyz), vec3(n_out11p0.xyz), n_out13p0);


// FloatOp:16
	float n_in16p1 = 0.03000;
	float n_out16p0 = n_out7p0 + n_in16p1;


	vec3 n_out4p0;
// If:4
	float n_in4p2 = 0.00001;
	vec3 n_in4p3 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out3p0.x - n_out16p0) < n_in4p2)
	{
		n_out4p0 = n_in4p3;
	}
	else if(n_out3p0.x < n_out16p0)
	{
		n_out4p0 = vec3(n_out6p0);
	}
	else
	{
		n_out4p0 = vec3(n_out5p0);
	}


// Mix:10
	float n_in10p0 = 0.00000;
	float n_out10p0 = mix(n_in10p0, n_out4p0.x, n_out11p4);


// Output:0
	COLOR.rgb = n_out14p0;
	COLOR.a = n_out10p0;


}
"
graph_offset = Vector2(-294.923, -24.261)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(2040, 700)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_ojflt")
nodes/fragment/2/position = Vector2(141, 204)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_13ox8")
nodes/fragment/3/position = Vector2(574.156, 490.278)
nodes/fragment/4/node = SubResource("VisualShaderNodeIf_31rq0")
nodes/fragment/4/position = Vector2(1031.16, 504.018)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatConstant_vrh42")
nodes/fragment/5/position = Vector2(784.443, 845.577)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatConstant_k0t6s")
nodes/fragment/6/position = Vector2(780, 960)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatParameter_vj3ax")
nodes/fragment/7/position = Vector2(400, 760)
nodes/fragment/8/node = SubResource("VisualShaderNodeInput_k8gfl")
nodes/fragment/8/position = Vector2(591.368, 1046.34)
nodes/fragment/10/node = SubResource("VisualShaderNodeMix_4enpw")
nodes/fragment/10/position = Vector2(1658.7, 782.799)
nodes/fragment/11/node = SubResource("VisualShaderNodeTexture_i7po5")
nodes/fragment/11/position = Vector2(1120, 860)
nodes/fragment/12/node = SubResource("VisualShaderNodeInput_hj3hs")
nodes/fragment/12/position = Vector2(522.389, 98.7996)
nodes/fragment/13/node = SubResource("VisualShaderNodeIf_4f3ld")
nodes/fragment/13/position = Vector2(1129.99, 164.684)
nodes/fragment/14/node = SubResource("VisualShaderNodeMix_3ym76")
nodes/fragment/14/position = Vector2(1560, 240)
nodes/fragment/15/node = SubResource("VisualShaderNodeColorConstant_17k0v")
nodes/fragment/15/position = Vector2(1360, 20)
nodes/fragment/16/node = SubResource("VisualShaderNodeFloatOp_inlut")
nodes/fragment/16/position = Vector2(300, 1040)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 3, 0, 4, 0, 5, 0, 4, 4, 6, 0, 4, 5, 4, 0, 10, 1, 8, 0, 11, 2, 11, 4, 10, 2, 10, 0, 0, 1, 12, 0, 3, 0, 3, 0, 13, 0, 7, 0, 13, 1, 5, 0, 13, 4, 6, 0, 13, 5, 11, 0, 14, 1, 13, 0, 14, 2, 15, 0, 14, 0, 7, 0, 16, 0, 16, 0, 4, 1, 14, 0, 0, 0)
